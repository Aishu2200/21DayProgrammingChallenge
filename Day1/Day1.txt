
1]
2]

Problem 1:COMPARE THE TRIPLET PROBLEM

1] triplet.c
#include<stdio.h>

int main()
{
	int n=3,al=0,bb=0,i,a[3],b[3];
	//alice part
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	//bob part
	for(i=0;i<n;i++)
	{
		scanf("%d",&b[i]);
	}
	//compare part
	for(i=0;i<n;i++)
	{
		if(a[i]==b[i])
		{
			al+=0;
			bb+=0;
		}
		else if(a[i]>b[i])
		{
			al+=1;
			bb+=0;
		}
		else
		{
			bb+=1;
			al+=0;
		}
	}

	//alice and bob points
	printf("%d %d",al,bb);

}



/* output 
 aishwariya@linux:~/Hackerrank$ ./a.out
5 6 7
3 6 10
1 1
 */


2]triplet.cpp
#include<iostream>
using namespace std;


int main() {
	int a0,a1,a2;
	cin >> a0 >> a1 >> a2;
	int b0,b1,b2;
	cin >> b0 >> b1 >> b2;
	//logic
	int a=0,b=0;
	if(a0>b0) {
		a++;
	}
	else if(a0<b0) {
		b++;
	}
	if(a1>b1) {
                a++;
        }
	else if(a1<b1) {
                b++;
        }
	if(a2>b2) {
                a++;
        }
        else if(a2<b2) {
                b++;
        }
	cout << a << " " << b;
	return 1;


}

/* output 
aishwariya@linux:~/Hackerrank$ ./a.out
5 6 7
3 6 10
1 1 */



Problem 2:Mini-Max Sum

1]minMaxSum.c
#include<stdio.h>
int main() {

   long long int a[5],i,max=-1,min=100000000000,sum=0;
    for(i=0;i<5;i++){
        scanf("%lld",&a[i]);
        sum = sum + a[i];
        if(a[i]<min){
            min = a[i];
        }
        if(a[i]>max){
            max = a[i];
        }
    }
    printf("%lld %lld",sum-max,sum-min);
    return 0;
}

/* output
aishwariya@linux:~/Hackerrank$ ./a.out
2 3 4 5 6 7
14 18
*/


2]minMaxSum.py

a = input().strip().split(' ')
for i in range(0, len(a)):
    a[i] = int(a[i])
    
s = sum(a)
print(str(s - max(a)) + " " + str(s - min(a)))



Problem 3:Time Conversion

1]timeConversion.py

def TimeChanger(s):
    if(s[-2:]=="AM" and s[2:]=='12'):
        return "00"+s[2:8]
    elif(s[-2:]=="AM"):
        return s[0:8]
    elif(s[-2:]=='PM' and s[:2]=='12'):
        return s[0:8]
    else:
        return str(int(s[:2])+12)+s[2:8]


s=input("Enter the time:")
print(TimeChanger(s))


/* output 
aishwariya@linux:~/Hackerrank$ python timeConversion.py
Enter the time:07:05:45PM
19:05:45
*/

2]timeConversion.c
 
#include<stdio.h>
#include<stdlib.h>
int main()
{
        char s[10];
        gets(s);
        if(s[8]=='A')
        {
                if(s[0]=='1' && s[1]=='2')
                {
                        s[0]='0';
                        s[0]='0';
                }
        }
        if(s[8]=='P')
        {
                if(s[0]=='0' || s[1]!='2')
                {
                        s[0]+=1;
                        s[1]+=2;
                }

        }
        s[8]='\0';
        puts(s);
        return 0;
}

/* output
aishwariya@linux:~/Hackerrank$ ./a.out
02:05:35PM
14:05:35
*/

=========================================================================================================================================================

3]
long is equivalent to long int
A long int is a signed integral type that is at least 32 bits, 
while a long long or long long int is a signed integral type is at least 64 bits. 
This doesn't necessarily mean that a long long is wider than a long.
=========================================================================================================================================================
