
Number Line Jump
------------------

1]numberLineJump.c
------------------

#include<stdio.h>

int main() {

    int x1,v1,x2,v2;
    int temp;

    printf("ENter x1, v1, x2, v2 : \t");
    scanf("%d%d%d%d",&x1,&v1,&x2,&v2);

    if(x1 > x2) {

        temp = x1;
        x1 = x2;
        x2 = temp;

        temp = v1;
        v1 = v2;
        v2 = temp;
    }

    while(x1 < x2) {

        x1 += v1;
        x2 += v2;
    }
    if(x1 == x2)
        printf("YES\n");
    else
        printf("NO\n");

    return 0;
}



/* output
aishwariya@linux:~/Hackerrank/Day3$ ./a.out
ENter x1, v1, x2, v2 : 	3 1 2 2
YES */




========================================================================================

A very Big Sum
-------------



1]aVeryBigSum.cpp
-----------------

#include <iostream>
using namespace std;

int main() {

    int n;
    unsigned long long int sum = 0;
    unsigned long long int in;

    cout << "Enter n";
    cin >> n;

    cout << "Enter num : ";
    for(int i = 0;i < n;i++) {

        cin >> in;
        sum += in;
    }
    cout << sum;
    cout << "\n";
    return 0;
}

/* output
aishwariya@linux:~/Hackerrank/Day1$ ./a.out
Enter n5
Enter num : 1000000001 1000000002 1000000003 1000000004 1000000005
5000000015
*/


====================================================================================================

Diagonal Difference
-------------------



1]diagonalDifference.py

N=int(input())
grid=[]
for i in range(0,N):
    lists=[int(i) for i in input().split()]
    grid.append(lists)
count=0
sum1=0
sum2=0
j1=0
j2=N-1
while(count<N):
    sum1=sum1+grid[count][j1]
    sum2=sum2+grid[count][j2]
    count+=1
    j1+=1
    j2-=1
print(abs(sum1-sum2))

 

/* output
 aishwariya@linux:~/Hackerrank/Day3$ python diagonalDifference.py
3 
3 4 5
2 3 4
8 9 7
3
*/





=================================================================================================
